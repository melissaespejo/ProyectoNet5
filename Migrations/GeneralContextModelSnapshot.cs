// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApi.Models;

namespace TodoApi.Migrations
{
    [DbContext(typeof(GeneralContext))]
    partial class GeneralContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TodoApi.Models.Ciudad", b =>
                {
                    b.Property<long>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("CiudadId");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("TodoApi.Models.Persona", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("CiudadFK")
                        .HasColumnType("bigint");

                    b.Property<long>("Dni")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("UserFK")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CiudadFK");

                    b.HasIndex("UserFK")
                        .IsUnique();

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("TodoApi.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TodoApi.Models.Persona", b =>
                {
                    b.HasOne("TodoApi.Models.Ciudad", "Ciudad")
                        .WithMany("Persona")
                        .HasForeignKey("CiudadFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoApi.Models.User", "user")
                        .WithOne("Persona")
                        .HasForeignKey("TodoApi.Models.Persona", "UserFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TodoApi.Models.Ciudad", b =>
                {
                    b.Navigation("Persona");
                });

            modelBuilder.Entity("TodoApi.Models.User", b =>
                {
                    b.Navigation("Persona");
                });
#pragma warning restore 612, 618
        }
    }
}
